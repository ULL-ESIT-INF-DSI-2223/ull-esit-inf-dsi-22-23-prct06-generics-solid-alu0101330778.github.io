{"version":3,"file":"/home/usuario/p6/ull-esit-inf-dsi-22-23-prct06-generics-solid-alu0101330778.github.io/src/ejercicio_1.ts","sources":["/home/usuario/p6/ull-esit-inf-dsi-22-23-prct06-generics-solid-alu0101330778.github.io/src/ejercicio_1.ts"],"names":[],"mappings":"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","sourcesContent":["//DSIflix\n\nimport * as Prompt from \"prompt-sync\";\n\nconst prompt = Prompt();\n\n/**\n * Interfaz Streamable\n */\n\nexport interface Streamable<T> {\n  buscar(parametro: string, valor: string): T[];\n  addElement(element: T): void;\n  getElements(): T[];\n}\n\n/**\n * Clase que que define una colección de streamable\n */\nexport abstract class BasicStreamableCollection<T> implements Streamable<T> {\n  /**\n   * Constructor de la clase\n   */\n  constructor(protected lista: T[]) {}\n  /**\n   * Añade un elemento a la lista\n   */\n  addElement(element: T): void {\n    this.lista.push(element);\n  }\n  /**\n   * Busca un elemento de tipo parametro con valor valor\n   */\n  abstract buscar(parametro: string, valor: string): T[];\n  abstract getElements(): T[];\n}\n\n/**\n * Tipo de dato documental\n */\nexport type documental = {\n  titulo: string;\n  fecha: number;\n  duracion: number;\n  genero: string;\n};\n/**\n * Clase que define una colección de documentales\n */\nexport class Documental extends BasicStreamableCollection<documental> {\n  /**\n   * Constructor de la lista\n   * @param documentales Lista de documentales\n   */\n  constructor(private documentales: documental[]) {\n    super(documentales);\n  }\n  /**\n   * Buscar una lista de documentales que coincidan con el tipo y el valor.\n   * @param opcion Tipo de parametro\n   * @param valor Valor del parametro\n   * @returns Lista de documentales\n   */\n  buscar(opcion: string, valor: string): documental[] {\n    let resultado: documental[] = [];\n    switch (opcion) {\n      case \"titulo\":\n        resultado = this.getElements().filter((aux) => aux.titulo == valor);\n        break;\n      case \"fecha\":\n        resultado = this.getElements().filter((aux) => aux.fecha == +valor);\n        break;\n      case \"genero\":\n        resultado = this.getElements().filter((aux) => aux.genero == valor);\n        break;\n      case \"duracion\":\n        resultado = this.getElements().filter((aux) => aux.duracion == +valor);\n        break;\n      default:\n        console.log(\"No existe\");\n    }\n    return resultado;\n  }\n\n  /**\n   * Retorna los documentales que hay en la lista\n   */\n  getElements(): documental[] {\n    return this.documentales;\n  }\n}\n\n/**\n * Tipo de dato serie\n */\nexport type serie = {\n  titulo: string;\n  fecha: number;\n  duracion: number;\n  genero: string;\n  numeroTemporadas: number;\n  numeroCapitulos: number;\n};\n/**\n * Clase que define una colección de series\n */\nexport class Serie extends BasicStreamableCollection<serie> {\n  /**\n   * Constructor de la lista\n   * @param series Lista de series\n   */\n  constructor(private series: serie[]) {\n    super(series);\n  }\n  /**\n   * Buscar una lista de series que coincidan con el tipo y el valor.\n   * @param opcion Tipo de parametro\n   * @param valor Valor del parametro\n   * @returns Lista de series\n   */\n  buscar(opcion: string, valor: string): serie[] {\n    let resultado: serie[] = [];\n    switch (opcion) {\n      case \"titulo\":\n        resultado = this.getElements().filter((aux) => aux.titulo == valor);\n        break;\n      case \"fecha\":\n        resultado = this.getElements().filter((aux) => aux.fecha == +valor);\n        break;\n      case \"genero\":\n        resultado = this.getElements().filter((aux) => aux.genero == valor);\n        break;\n      case \"duracion\":\n        resultado = this.getElements().filter((aux) => aux.duracion == +valor);\n        break;\n      case \"numeroTemporadas\":\n        resultado = this.getElements().filter(\n          (aux) => aux.numeroTemporadas == +valor\n        );\n        break;\n      case \"numeroCapitulos\":\n        resultado = this.getElements().filter(\n          (aux) => aux.numeroCapitulos == +valor\n        );\n        break;\n      default:\n        console.log(\"No existe\");\n    }\n    return resultado;\n  }\n\n  /**\n   * Retorna las series que hay en la lista\n   */\n  getElements(): serie[] {\n    return this.series;\n  }\n}\n\n/**\n * Tipo de dato pelicula\n */\nexport type pelicula = {\n  titulo: string;\n  fecha: number;\n  duracion: number;\n  genero: string;\n  clasificacion: string;\n  director: string;\n};\n\n/**\n * Clase que define una colección de peliculas\n */\nexport class Pelicula extends BasicStreamableCollection<pelicula> {\n  /**\n   * Constructor de la lista\n   * @param peliculas Lista de peliculas\n   */\n  constructor(private peliculas: pelicula[]) {\n    super(peliculas);\n  }\n  /**\n   * Buscar una lista de peliculas que coincidan con el tipo y el valor.\n   * @param opcion Tipo de parametro\n   * @param valor Valor del parametro\n   * @returns Lista de peliculas\n   */\n  buscar(opcion: string, valor: string): pelicula[] {\n    let resultado: pelicula[] = [];\n    switch (opcion) {\n      case \"titulo\":\n        resultado = this.getElements().filter((aux) => aux.titulo == valor);\n        break;\n      case \"fecha\":\n        resultado = this.getElements().filter((aux) => aux.fecha == +valor);\n        break;\n      case \"genero\":\n        resultado = this.getElements().filter((aux) => aux.genero == valor);\n        break;\n      case \"duracion\":\n        resultado = this.getElements().filter((aux) => aux.duracion == +valor);\n        break;\n      case \"clasificacion\":\n        resultado = this.getElements().filter(\n          (aux) => aux.clasificacion == valor\n        );\n        break;\n      case \"director\":\n        resultado = this.getElements().filter((aux) => aux.director == valor);\n        break;\n      default:\n        console.log(\"No existe\");\n    }\n    return resultado;\n  }\n  /**\n   * Retorna las peliculas que hay en la lista\n   */\n  getElements(): pelicula[] {\n    return this.peliculas;\n  }\n}\n"]}