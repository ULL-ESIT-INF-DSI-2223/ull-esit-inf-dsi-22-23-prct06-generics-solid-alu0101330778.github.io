{"version":3,"file":"/home/usuario/p6/ull-esit-inf-dsi-22-23-prct06-generics-solid-alu0101330778.github.io/src/ejercicio_2.ts","sources":["/home/usuario/p6/ull-esit-inf-dsi-22-23-prct06-generics-solid-alu0101330778.github.io/src/ejercicio_2.ts"],"names":[],"mappings":";AAAA,OAAO;;;AAEP;;GAEG;AACH,MAAa,KAAK;IACR,KAAK,GAAQ,EAAE,CAAC;IAExB,YAAY,KAAU;QACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IACD;;;OAGG;IACI,GAAG,CAAC,QAAW;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,QAAQ,CAAC;IACvC,CAAC;IAED;;;;OAIG;IACI,UAAU,CAAC,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,MAAM,CAAC,KAAe;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACD;;;;OAIG;IACI,WAAW,CAAC,MAAkB;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACD;;;;OAIG;IACI,MAAM,CAAC,SAAmC;QAC/C,MAAM,aAAa,GAAQ,EAAE,CAAC;QAC9B,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;QAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;YACtC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC5B,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aAChC;SACF;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IACD;;;OAGG;IACI,MAAM;QACX,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,QAAQ,GAAG,CAAC,CAAC;QACjB,OAAO,IAAI,EAAE;YACX,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE;gBAChC,QAAQ,EAAE,CAAC;aACZ;iBAAM;gBACL,IAAI,GAAG,KAAK,CAAC;aACd;SACF;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IACD;;;;OAIG;IACI,GAAG,CAAC,OAA2B;QACpC,MAAM,QAAQ,GAAQ,EAAE,CAAC;QACzB,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;YACtC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzC;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IACD;;;;OAIG;IACI,MAAM,CAAC,OAA0C,EAAE,UAAa;QACrE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;YACtC,UAAU,GAAG,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACjD;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;IAED;;;OAGG;IACI,OAAO;QACZ,MAAM,YAAY,GAAQ,EAAE,CAAC;QAC7B,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;QAC5C,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3C,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAChC;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IACD;;;OAGG;IACI,OAAO,CAAC,OAA8B;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;YACtC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACxB;IACH,CAAC;CACF;AA1HD,sBA0HC","sourcesContent":["//Lista\n\n/**\n * Clase generica de datos que define una lista\n */\nexport class Lista<T> {\n  private lista: T[] = [];\n\n  constructor(lista: T[]) {\n    this.lista = lista;\n  }\n  /**\n   * Añade un elemento al final de la lista\n   * @param elemento Elemento a añadir\n   */\n  public add(elemento: T): void {\n    this.lista[this.length()] = elemento;\n  }\n\n  /**\n   * Devuelve el elemento de la lista en la posición index\n   * @param index Posición del elemento\n   * @returns Elemento de la lista\n   */\n  public getbyindex(index: number): T {\n    return this.lista[index];\n  }\n\n  /**\n   * Une dos listas\n   * @param lista Lista a unir\n   * @returns Lista unida\n   */\n  public append(lista: Lista<T>): Lista<T> {\n    for (let i = 0; i < lista.length(); i++) {\n      this.add(lista.lista[i]);\n    }\n    return this;\n  }\n  /**\n   * Une varias listas\n   * @param listas Listas a unir\n   * @returns Lista unida\n   */\n  public concatenate(listas: Lista<T>[]): Lista<T> {\n    for (let i = 0; i < listas.length; i++) {\n      this.append(listas[i]);\n    }\n    return this;\n  }\n  /**\n   * Filtra la lista en base a una funcion predicado\n   * @param predicado Funcion predicado\n   * @returns Lista filtrada\n   */\n  public filter(predicado: (elemento: T) => boolean): Lista<T> {\n    const listaFiltrada: T[] = [];\n    const listaresult = new Lista(listaFiltrada);\n    for (let i = 0; i < this.length(); i++) {\n      if (predicado(this.lista[i])) {\n        listaresult.add(this.lista[i]);\n      }\n    }\n    return listaresult;\n  }\n  /**\n   * Calcula el tamaño de la lista\n   * @returns El tamaño de la lista\n   */\n  public length(): number {\n    let flag = true;\n    let contador = 0;\n    while (flag) {\n      if (this.lista[contador] != null) {\n        contador++;\n      } else {\n        flag = false;\n      }\n    }\n    return contador;\n  }\n  /**\n   * Actua con una funcion sobre todos los parámetros de la lista y devuelve una lista con los resultados\n   * @param funcion Funcion a aplicar\n   * @returns Lista con los resultados\n   */\n  public map(funcion: (elemento: T) => T): Lista<T> {\n    const listaMap: T[] = [];\n    const listaresult = new Lista(listaMap);\n    for (let i = 0; i < this.length(); i++) {\n      listaresult.add(funcion(this.lista[i]));\n    }\n    return listaresult;\n  }\n  /**\n   * Reduce la lista a un valor\n   * @param funcion Funcion a aplicar\n   * @returns Valor resultante\n   */\n  public reduce(funcion: (acumulador: T, elemento: T) => T, acumulador: T): T {\n    for (let i = 0; i < this.length(); i++) {\n      acumulador = funcion(acumulador, this.lista[i]);\n    }\n    return acumulador;\n  }\n\n  /**\n   * Devuelve la lista invertida\n   * @returns Lista invertida\n   */\n  public reverse(): Lista<T> {\n    const listaReverse: T[] = [];\n    const listaresult = new Lista(listaReverse);\n    for (let i = this.length() - 1; i >= 0; i--) {\n      listaresult.add(this.lista[i]);\n    }\n    return listaresult;\n  }\n  /**\n   * Actua con una funcion sobre todos los parámetros de la lista\n   * @param funcion Funcion a aplicar\n   */\n  public forEach(funcion: (elemento: T) => void): void {\n    for (let i = 0; i < this.length(); i++) {\n      funcion(this.lista[i]);\n    }\n  }\n}\n"]}